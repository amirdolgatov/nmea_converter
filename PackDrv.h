/* PckDrv.h
 ****************************************
 *                                      *
 *               Простейший             *
 *            пакетный драйвер          *
 *          v1.0   (c) ИТТ, 2019        *
 *                                      *
 ****************************************
 * created: 13.07.2019, суббота [Тенюшев Е.Н.]
 * revised: 14.12.2021, вторник, [Тенюшев Е.Н.]
 */

#pragma once

#include "ComnTypes.h"


/*---------------------------------------------------------------------------
 *  Структура пакетов данных
 *---------------------------------------------------------------------------
 *     В оба направления передачи информации обмен данными осуществляется 
 * пакетами следующего формата:
 *                                  Hdr Id Len <Body> CRC8,
   Hdr    - заголовок (0xA5);
 * Id     - идентификатор пакета (1 байт, значения от 0 до 255);
 * Len    - длина тела пакета (1 байт, значения от 0 до 255);
 * <Body> - полезная информация (тело) пакета длины Len;
 * CRC    - однобайтовая арифметическая контрольная сумма. Рассчитывается, начиная с поля Hdr включительно.
 */

//----------------------------------------------------------------------------
#define  MAX_DATA_LEN       255U            // Максимально возможная длина тела данных пакета
#define  MAX_PACK_LEN (MAX_DATA_LEN + 4U)   // Максимально возможная длина пакета вместе со служебной информацией
#define  PACK_HDR           0xA5U           // Значение заголовка пакета


//----------------------------------------------------------------------------
struct SimplePacket                         // Структура пакета (в линии поля структуры находятся в другом порядке, здесь они перемешаны для выравнивания полей)
{
    byte    Data[MAX_DATA_LEN];             // Данные принятого пакета (без служебных байтов)
    uint8   Reserv;
    uint8   Hdr;                            // Заголовок пакета
    uint8   Id;                             // Идентификатор пакета
    uint8   Len;                            // Длина массива данных пакета
    uint8   Crc;                            // Контрольная сумма пакета
    void   *pData;                          // Указатель на используемое тело пакета при выдаче данных в линию
};


//----------------------------------------------------------------------------
class PacketDriver
{
public:
    PacketDriver(void);
                                            // Побайтная обработка потока в линии для выделения пакетов
    int     parse(byte Data, SimplePacket *Pack);
                                            // Сформировать пакет для отправки в линию, возвращает фактический размер пакета
    uint16  form(byte *Buf, const SimplePacket *Pack);
                                            // Номер ошибки
    int     errors(void)    {return NumError;}
    void    reset(void);                    // Начать разбор сначала

    SimplePacket     PackRcvd;              // Временное хранение принятого пакета

                                            // Для надёжных каналов передачи данных (Ethernet) вычислять и проверять КС смысла нет
    bool    CalcPckBodyCRC;                 // Вычислять контрольную сумму для тела пакета?

protected:
    int8    Reserv[3];
    uint8   Step;                           // Этап (шаг) процедуры разбора
    uint8   NumError;                       // Счётчик ошибок на приеме
    uint16  LenRcvd;                        // Текущее количество принятых байт пакета
};
